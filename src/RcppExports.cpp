// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// itemfitcpp
List itemfitcpp(IntegerMatrix Rdata, unsigned int dim, int model, double EMepsilon, NumericMatrix Rtheta, NumericVector Rweights, IntegerVector Rindividual_weights, bool dichotomous_data, IntegerVector Rclusters, NumericMatrix Rinitial_values, bool verbose);
RcppExport SEXP LatentREGpp_itemfitcpp(SEXP RdataSEXP, SEXP dimSEXP, SEXP modelSEXP, SEXP EMepsilonSEXP, SEXP RthetaSEXP, SEXP RweightsSEXP, SEXP Rindividual_weightsSEXP, SEXP dichotomous_dataSEXP, SEXP RclustersSEXP, SEXP Rinitial_valuesSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type Rdata(RdataSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< double >::type EMepsilon(EMepsilonSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rtheta(RthetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Rweights(RweightsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Rindividual_weights(Rindividual_weightsSEXP);
    Rcpp::traits::input_parameter< bool >::type dichotomous_data(dichotomous_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Rclusters(RclustersSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rinitial_values(Rinitial_valuesSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(itemfitcpp(Rdata, dim, model, EMepsilon, Rtheta, Rweights, Rindividual_weights, dichotomous_data, Rclusters, Rinitial_values, verbose));
    return rcpp_result_gen;
END_RCPP
}
// personfitcpp
List personfitcpp(IntegerMatrix Rdata, unsigned int dim, int model, NumericMatrix Rzetas, NumericMatrix Rtheta, NumericVector Rweights, std::string method, bool by_individuals, bool dichotomous_data, NumericMatrix Rinit_traits);
RcppExport SEXP LatentREGpp_personfitcpp(SEXP RdataSEXP, SEXP dimSEXP, SEXP modelSEXP, SEXP RzetasSEXP, SEXP RthetaSEXP, SEXP RweightsSEXP, SEXP methodSEXP, SEXP by_individualsSEXP, SEXP dichotomous_dataSEXP, SEXP Rinit_traitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type Rdata(RdataSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rzetas(RzetasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rtheta(RthetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Rweights(RweightsSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< bool >::type by_individuals(by_individualsSEXP);
    Rcpp::traits::input_parameter< bool >::type dichotomous_data(dichotomous_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Rinit_traits(Rinit_traitsSEXP);
    rcpp_result_gen = Rcpp::wrap(personfitcpp(Rdata, dim, model, Rzetas, Rtheta, Rweights, method, by_individuals, dichotomous_data, Rinit_traits));
    return rcpp_result_gen;
END_RCPP
}
